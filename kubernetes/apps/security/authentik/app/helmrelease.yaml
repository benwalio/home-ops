---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 15m

  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io
      chart: authentik
      version: 2023.2.3
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
      interval: 15m

  values:
    image:
      repository: ghcr.io/goauthentik/server
      tag: 2023.2.2

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        external-dns.home.arpa/enabled: "true"
      hosts:
        - host: &host authentik.${SECRET_DOMAIN}
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - *host

    geoip:
      enabled: true

    authentik:
      log_level: debug
      redis:
        host: authentik-redis.security.svc.cluster.local
      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s

    envValueFrom:
      AUTHENTIK_EMAIL__HOST:
        secretKeyRef:
          name: authentik-secret
          key: SMTP_HOST
      AUTHENTIK_EMAIL__PORT:
        secretKeyRef:
          name: authentik-secret
          key: SMTP_PORT
      AUTHENTIK_EMAIL__USERNAME:
        secretKeyRef:
          name: authentik-secret
          key: SMTP_USER
      AUTHENTIK_EMAIL__PASSWORD:
        secretKeyRef:
          name: authentik-secret
          key: SMTP_PASS
      AUTHENTIK_EMAIL__FROM:
        secretKeyRef:
          name: authentik-secret
          key: SMTP_FROM
      AUTHENTIK_SECRET_KEY:
        secretKeyRef:
          name: authentik-secret
          key: AUTHENTIK_SECRET_KEY
      AUTHENTIK_POSTGRESQL__HOST:
        secretKeyRef:
          name: authentik-secret
          key: POSTGRES_HOST
      AUTHENTIK_POSTGRESQL__NAME:
        secretKeyRef:
          name: authentik-secret
          key: POSTGRES_DB
      AUTHENTIK_POSTGRESQL__USER:
        secretKeyRef:
          name: authentik-secret
          key: POSTGRES_USER
      AUTHENTIK_POSTGRESQL__PASSWORD:
        secretKeyRef:
          name: authentik-secret
          key: POSTGRES_PASS

    postgresql:
      enabled: false
    redis:
      enabled: false

    prometheus:
      rules:
        create: true
      serviceMonitor:
        create: true

    podAnnotations:
      secret.reloader.stakater.com/reload: authentik-secret

  valuesFrom:
    # GEOIP
    - kind: Secret
      name: authentik-secret
      valuesKey: GEOIP_ACCOUNT_ID
      targetPath: geoip.accountId
      optional: false
    - kind: Secret
      name: authentik-secret
      valuesKey: GEOLITE_LICENSE_KEY
      targetPath: geoip.licenseKey
      optional: false
