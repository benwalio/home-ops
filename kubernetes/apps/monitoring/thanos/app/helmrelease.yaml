---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: thanos
      version: 12.3.1
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    objstoreConfig:
      type: s3
      config:
        insecure: true

    queryFrontend:
      enabled: false
      # replicaCount: 2
      # podAntiAffinityPreset: hard

    query:
      enabled: true
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitoring
      ingress:
        enabled: true
        hostname: "thanos-cluster-0.${SECRET_DOMAIN}"
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
        tls: true

      replicaLabels:
        - "__replica__" # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.replicaExternalLabelName`

      resources:
        requests:
          cpu: 15m
          memory: 64M
        limits:
          memory: 99M

    bucketweb:
      enabled: true
      # replicaCount: 2
      # podAntiAffinityPreset: hard
      resources:
        requests:
          cpu: 15m
          memory: 64M
        limits:
          memory: 64M

    compactor:
      enabled: true
      extraFlags:
        - --compact.concurrency=4
        # - --delete-delay=30m
      retentionResolutionRaw: 14d
      retentionResolution5m: 14d
      retentionResolution1h: 30d
      resources:
        requests:
          cpu: 15m
          memory: 204M
        limits:
          memory: 270M
      persistence:
        enabled: true
        storageClass: ceph-block
        size: 15Gi

    storegateway:
      enabled: true
      # replicaCount: 2
      # podAntiAffinityPreset: hard
      resources:
        requests:
          cpu: 23m
          memory: 272M
        limits:
          memory: 536M
      persistence:
        enabled: true
        storageClass: ceph-block
        size: 1Gi

    ruler:
      enabled: true
      # replicaCount: 2
      replicaLabel: __replica__
      # podAntiAffinityPreset: hard
      dnsDiscovery:
        enabled: true
      alertmanagers:
        - http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
      # Breaks any metric that has an existing "cluster" label on a metric
      # clusterName: home # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.externalLabels.cluster`
      extraFlags: ["--web.prefix-header=X-Forwarded-Prefix"]
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
      resources:
        requests:
          cpu: 23m
          memory: 94M
        limits:
          memory: 113M
      persistence:
        enabled: true
        storageClass: ceph-block
        size: 1Gi

    receive:
      enabled: true
      replicaCount: 2
      replicaLabel: __replica__
      tsdbRetention: 2d
      extraFlags:
        - --receive.hashrings-algorithm=ketama
        - --tsdb.wal-compression
      persistence:
        enabled: true
        storageClass: ceph-block
        size: 20Gi

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  valuesFrom:
    - targetPath: objstoreConfig.config.bucket
      kind: ConfigMap
      name: thanos-bucket-v1
      valuesKey: BUCKET_NAME
    - targetPath: objstoreConfig.config.endpoint
      kind: ConfigMap
      name: thanos-bucket-v1
      valuesKey: BUCKET_HOST
    - targetPath: objstoreConfig.config.region
      kind: ConfigMap
      name: thanos-bucket-v1
      valuesKey: BUCKET_REGION
    - targetPath: objstoreConfig.config.access_key
      kind: Secret
      name: thanos-bucket-v1
      valuesKey: AWS_ACCESS_KEY_ID
    - targetPath: objstoreConfig.config.secret_key
      kind: Secret
      name: thanos-bucket-v1
      valuesKey: AWS_SECRET_ACCESS_KEY
