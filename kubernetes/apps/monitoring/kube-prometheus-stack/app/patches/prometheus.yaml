---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  values:
    prometheus:
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/appName: Prometheus
          hajimari.io/icon: simple-icons:prometheus
        pathType: Prefix
        hosts:
          - &host prometheus.benwal.casa
        tls:
          - hosts:
              - *host
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      prometheusSpec:
        replicas: 3
        replicaExternalLabelName: __replica__ # must match with thanos value `.query.replicaLabel[0]`
        # Breaks any metric that has an existing "cluster" label on a metric
        # externalLabels:
        #   cluster: home # must match with thanos value `.ruler.clusterName`
        thanos:
          image: quay.io/thanos/thanos:v0.30.1
          # renovate: datasource=docker depName=quay.io/thanos/thanos
          version: "v0.30.1"
          objectStorageConfig:
            name: thanos-objstore-secret
            key: objstore.yml
        podAntiAffinity: hard
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 2d
        retentionSize: 6GB
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 20Gi
        resources:
          requests:
            cpu: 10m
            memory: 2000Mi
          limits:
            memory: 8000Mi
        # additionalScrapeConfigs:
        #   - job_name: haproxy
        #     scrape_interval: 1m
        #     scrape_timeout: 10s
        #     honor_timestamps: true
        #     static_configs:
        #       - targets: ["opnsense.turbo.ac:8404"]
        #   - job_name: coredns
        #     scrape_interval: 1m
        #     scrape_timeout: 10s
        #     honor_timestamps: true
        #     static_configs:
        #       - targets: ["opnsense.turbo.ac:9153"]
        #   - job_name: frr-exporter
        #     scrape_interval: 1m
        #     scrape_timeout: 10s
        #     honor_timestamps: true
        #     static_configs:
        #       - targets: ["opnsense.turbo.ac:9342"]
        #   - job_name: node-exporter
        #     scrape_interval: 1m
        #     scrape_timeout: 10s
        #     honor_timestamps: true
        #     static_configs:
        #       - targets:
        #           - expanse.turbo.ac:9100
        #           - opnsense.turbo.ac:9100
        #           - pikvm.turbo.ac:9100
        #   - job_name: smartctl-exporter
        #     scrape_interval: 1m
        #     scrape_timeout: 10s
        #     honor_timestamps: true
        #     static_configs:
        #       - targets: ["expanse.turbo.ac:9633"]
        #   - job_name: pikvm
        #     scrape_interval: 1m
        #     scrape_timeout: 10s
        #     metrics_path: /api/export/prometheus/metrics
        #     basic_auth:
        #       username: admin
        #       password: 1NtERnALOnLYuS3
        #     honor_timestamps: true
        #     static_configs:
        #       - targets: ["pikvm.turbo.ac"]
        #   - job_name: nexus
        #     scrape_interval: 1m
        #     scrape_timeout: 10s
        #     metrics_path: /service/metrics/prometheus
        #     basic_auth:
        #       username: admin
        #       password: 1NtERnALOnLYuS3
        #     static_configs:
        #       - targets: ["nexus.turbo.ac"]
