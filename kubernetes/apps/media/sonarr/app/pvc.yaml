---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarr-swap-nfs-pv
spec:
  capacity:
    storage: 1Mi
  accessModes: ["ReadWriteMany"]
  storageClassName: sonarr-swap-nfs
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: pelican.grz.bear
    path: /mnt/ingot/hydra/swap
  mountOptions: ["nfsvers=4.2", "nconnect=8", "hard", "noatime"]
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-swap-nfs-pvc
  namespace: media
spec:
  accessModes: ["ReadWriteMany"]
  storageClassName: sonarr-swap-nfs
  resources:
    requests:
      storage: 1Mi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarr-media-nfs-pv
spec:
  capacity:
    storage: 1Mi
  accessModes: ["ReadWriteMany"]
  storageClassName: sonarr-media-nfs
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: pelican.grz.bear
    path: /mnt/ingot/hydra/media/video/tv
  mountOptions: ["nfsvers=4.2", "nconnect=8", "hard", "noatime"]
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-media-nfs-pvc
  namespace: media
spec:
  accessModes: ["ReadWriteMany"]
  storageClassName: sonarr-media-nfs
  resources:
    requests:
      storage: 1Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-config-pvc
  namespace: media
  labels:
    app.kubernetes.io/name: &name sonarr
    app.kubernetes.io/instance: *name
    snapshot.home.arpa/enabled: "true"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ceph-block
  resources:
    requests:
      storage: 10Gi
