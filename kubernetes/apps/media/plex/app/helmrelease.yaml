---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
    image:
      repository: plexinc/pms-docker
      tag: 1.30.2.6563-3d4dc0cce
    env:
      TZ: ${TIMEZONE}
      ADVERTISE_IP: "http://${SVC_PLEX_ADDR}:32400/"
      ALLOWED_NETWORKS: "10.0.0.0/8,172.16.0.0/16,192.168.1.0/24,192.168.2.0/24"
    envFrom:
      - secretRef:
          name: plex-secret
    service:
      main:
        type: LoadBalancer
        # externalIPs:
        #   - ${SVC_PLEX_ADDR}
        annotations:
          # metallb.universe.tf/loadBalancerIPs: "${SVC_PLEX_ADDR}"
          metallb.universe.tf/allow-shared-ip: plex
        loadBalancerIP: ${SVC_PLEX_ADDR}
        externalTrafficPolicy: Local
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.home.arpa/enabled: "true"
          # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          # kubernetes.io/tls-acme: "true"
          # cert-manager.io/cluster-issuer: letsencrypt-production
          # nginx.ingress.kubernetes.io/configuration-snippet: |
          #   location = / {
          #     if ($http_x_plex_device = ""){
          #       return 301 $scheme://$host/web/index.html;
          #     }
          #   }
          hajimari.io/icon: mdi:plex
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups: [44, 109, 10000]
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 50Gi
        storageClass: ceph-block
        labels:
          snapshot.home.arpa/enabled: "true"
    persistence:
      media:
        enabled: true
        type: nfs
        server: 192.168.2.9
        path: /volume1/media
        mountPath: /media
        readOnly: true
      transcode:
        enabled: true
        type: emptyDir

    # addons:
    #   promtail:
    #     enabled: true
    #     image:
    #       repository: grafana/promtail
    #       tag: 2.7.2
    #     loki: http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push
    #     logs:
    #     - name: promtail/plex
    #       path: "/config/Library/Application Support/Plex Media Server/Logs/*.log"
    #     - name: promtail/plex/plugins
    #       path: "/config/Library/Application Support/Plex Media Server/Logs/PMS Plugin Logs/*.log"
    #     volumeMounts:
    #     - name: config
    #       mountPath: /config
    #       readOnly: true
    #     securityContext:
    #       runAsUser: 0
    nodeSelector:
      # node-role.kubernetes.io/worker: "true"
      intel.feature.node.kubernetes.io/gpu: "true"
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: ["frigate"]
            topologyKey: kubernetes.io/hostname
    resources:
      requests:
        gpu.intel.com/i915: 1
        cpu: 100m
        memory: 2000Mi
      limits:
        gpu.intel.com/i915: 1
        memory: 5000Mi
