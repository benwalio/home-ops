apiVersion: v1
kind: PersistentVolume
metadata:
  name: readarr-audio-swap-nfs
spec:
  storageClassName: readarr-audio-swap-nfs
  capacity:
    storage: 1Mi
  accessModes: ["ReadWriteMany"]
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: pelican.grz.bear
    path: /mnt/ingot/hydra/swap/downloads/completed/readarr-audio
  # Note: The first two options are strictly for NFSv4.2
  mountOptions: ["nfsvers=4.2", "nconnect=8", "hard", "noatime"]
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: readarr-audio-swap-nfs-pvc
  namespace: media
  labels:
    app.kubernetes.io/name: &name readarr-audio
    app.kubernetes.io/instance: *name
spec:
  accessModes: ["ReadWriteMany"]
  storageClassName: readarr-audio-swap-nfs
  resources:
    requests:
      storage: 1Mi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: readarr-audio-nfs
spec:
  storageClassName: readarr-audio-nfs
  capacity:
    storage: 1Mi
  accessModes: ["ReadWriteMany"]
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: pelican.grz.bear
    path: /mnt/ingot/hydra/media/audio/audiobooks
  # Note: The first two options are strictly for NFSv4.2
  mountOptions: ["nfsvers=4.2", "nconnect=8", "hard", "noatime"]
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: readarr-audio-nfs-pvc
  namespace: media
  labels:
    app.kubernetes.io/name: &name readarr-audio
    app.kubernetes.io/instance: *name
spec:
  accessModes: ["ReadWriteMany"]
  storageClassName: readarr-audio-nfs
  resources:
    requests:
      storage: 1Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: readarr-audio-config-pvc
  namespace: media
  labels:
    app.kubernetes.io/name: &name readarr-audio
    app.kubernetes.io/instance: *name
    snapshot.home.arpa/enabled: "true"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ceph-block
  resources:
    requests:
      storage: 5Gi
